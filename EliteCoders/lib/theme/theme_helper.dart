import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:educonsult/core/utils/size_utils.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added thist theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(5.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray500,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: 30.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: 25.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray200,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray600,
          fontSize: 17.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray800,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
    bodyLarge: TextStyle(
      color: appTheme.blueGray400,
      fontSize: 17.fSize,
      fontFamily: 'Poppins',
      fontWeight: FontWeight.w400,
    ),

    bodySmall: TextStyle(
      color: colorScheme.errorContainer,
      fontSize: 11.fSize,
      fontFamily: 'Poppins',
      fontWeight: FontWeight.w400,
    ),
    displayMedium: TextStyle(
      color: appTheme.gray400,
      fontSize: 40.fSize,
      fontFamily: 'Inter',
      fontWeight: FontWeight.w500,
    ),
    labelMedium: TextStyle(
      color: appTheme.blueGray90001,
      fontSize: 10.fSize,
      fontFamily: 'Inter',
      fontWeight: FontWeight.w700,
    ),
  );

}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF30A6DB),
    primaryContainer: Color(0XFF172452),
    secondaryContainer: Color(0XFF34A853),

    // Error colors
    errorContainer: Color(0XFF4285F4),
    onError: Color(0XFFFBBC05),

    // On colors(text colors)
    onPrimary: Color(0XFF182348),
    onPrimaryContainer: Color(0XFFE0E3EE),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue50 => Color(0XFFE7ECFF);
  Color get blueA400 => Color(0XFF1877F2);

  // BlueGray
  Color get blueGray800 => Color(0XFF38405E);

  // Gray
  Color get gray200 => Color(0XFFF0F0F0);
  Color get gray500 => Color(0XFF939393);
  Color get gray600 => Color(0XFF7A7A7A);
  Color get gray800 => Color(0XFF3C3C3C);
  Color get gray300 => Color(0XFFDDDDDD);
  Color get gray700 => Color(0XFF5C5C5C);
  Color get gray900 => Color(0XFF252525);
  Color get gray90001 => Color(0XFF181818);

  // Red
  Color get red500 => Color(0XFFEB4335);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  Color get blue900 => Color(0XFF1A35C2);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF8D8D8D);
  Color get blueGray40001 => Color(0XFF8C8F99);
  Color get blueGray900 => Color(0XFF172452);

  // Gray
  Color get gray20001 => Color(0XFFEEEEEE);
  Color get gray20002 => Color(0XFFF0F0F0);
  Color get gray20003 => Color(0XFFEAE8E8);
  Color get gray400 => Color(0XFFBFBFBF);

  // Indigo
  Color get indigo900 => Color(0XFF24265F);

  // LightBlueE
  Color get lightBlue600E2 => Color(0XE2169BD7);


  // LightBlue
  Color get lightBlue50 => Color(0XFFDFF9FF);

// Blackf
  Color get black9003f => Color(0X3F000000);

  // Blue
  Color get blue400 => Color(0XFF30A6DB);

  // BlueGray
  Color get blueGray50 => Color(0XFFF1F1F1);


  Color get blueGray90001 => Color(0XFF172452);

  // Gray
  Color get gray100 => Color(0XFFF7F7F7);

}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
